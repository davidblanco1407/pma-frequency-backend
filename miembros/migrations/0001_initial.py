# Generated by Django 5.2.2 on 2025-07-09 20:44

import django.db.models.deletion
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Miembro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_completo', models.CharField(help_text='Nombre completo del miembro. Máximo 100 caracteres.', max_length=100, verbose_name='Nombre completo')),
                ('email', models.EmailField(help_text='Correo único del miembro. Se usará como identificador de contacto.', max_length=254, unique=True, verbose_name='Correo electrónico')),
                ('pais', models.CharField(help_text='País de residencia del miembro. Máximo 50 caracteres.', max_length=50, verbose_name='País')),
                ('telefono', phonenumber_field.modelfields.PhoneNumberField(help_text='Número válido en formato colombiano o internacional. Requiere código de país.', max_length=128, region='CO', verbose_name='Número de teléfono')),
                ('activo', models.BooleanField(default=True)),
                ('puede_volver', models.BooleanField(default=True, help_text='Indica si el miembro puede ser reactivado en el futuro.', verbose_name='¿Puede volver?')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('fecha_desactivacion', models.DateTimeField(blank=True, null=True)),
                ('desactivado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Miembro',
                'verbose_name_plural': 'Miembros',
                'ordering': ['nombre_completo'],
            },
        ),
        migrations.CreateModel(
            name='Sancion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motivo', models.TextField(help_text='Descripción detallada del motivo de la sanción.', verbose_name='Motivo de la sanción')),
                ('fecha', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en la que se registró la sanción.', verbose_name='Fecha de sanción')),
                ('duracion_dias', models.PositiveIntegerField(blank=True, help_text='Duración de la sanción en días (opcional).', null=True, verbose_name='Duración (en días)')),
                ('impuesta_por', models.ForeignKey(blank=True, help_text='Usuario que registró o impuso la sanción.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Sanción impuesta por')),
                ('miembro', models.ForeignKey(help_text='Miembro al que se le aplica esta sanción.', on_delete=django.db.models.deletion.CASCADE, related_name='sanciones', to='miembros.miembro', verbose_name='Miembro sancionado')),
            ],
            options={
                'verbose_name': 'Sanción',
                'verbose_name_plural': 'Sanciones',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='SolicitudCorreccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.TextField(help_text='Detalle del error o situación que el miembro desea corregir.', verbose_name='Descripción del problema')),
                ('fecha', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se envió la solicitud.', verbose_name='Fecha de solicitud')),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('aprobada', 'Aprobada'), ('rechazada', 'Rechazada')], default='pendiente', help_text='Estado actual de la solicitud.', max_length=10, verbose_name='Estado')),
                ('respuesta', models.TextField(blank=True, help_text='Respuesta proporcionada por el administrador (opcional).', null=True, verbose_name='Respuesta del administrador')),
                ('miembro', models.ForeignKey(help_text='Miembro que envía la solicitud de corrección.', on_delete=django.db.models.deletion.CASCADE, related_name='solicitudes', to='miembros.miembro', verbose_name='Miembro solicitante')),
            ],
            options={
                'verbose_name': 'Solicitud de corrección',
                'verbose_name_plural': 'Solicitudes de corrección',
                'ordering': ['-fecha'],
            },
        ),
    ]
